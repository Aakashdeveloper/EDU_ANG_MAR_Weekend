Open Source coding
node_modules/Packages

nodejs https://nodejs.org/en/
visualStudioCode: https://code.visualstudio.com/
Github: https://github.com/
Win: https://git-scm.com/downloads

json=> javascript object  notation
{
    name:"angular",
    class:"first"
},
{
    name:"node",
    class:"second"
}

package.json

--local
--global


npm init
// local install
npm install --save zone.js
// global install
npm install -g @angular/cli
> mac/linux
sudo npm install -g @angular/cli
> Win
rum cmdprompt as admin
>>>> npm install -g @angular/cli

npm install typing -D

Step1
> npm install -g @angular/cli
Step2
> ng new firstapp
Step 3
> cd firstapp
Step 4
> npm start
Step 5
> http://localhost:4200


https://www.codecademy.com/courses/introduction-to-javascript

bootstrap
files in angular folder
building firstpage of angularapp

/*====================
    bootstrap
=====================*/
table
alerts
button
glyphicons
panels
navbar
forms
input
modal


/*================*/
tslint.json | Default | NoChange => help me to format the code.
tsconfig.json | Default | NoChange => Basic Confugration of transpile
                                      help to convert .ts => .js
ReadME.md | Default | CanChange according to project => Information about
                                                        App and command to excute App
package.json | Default | Change Require => Have Informationof packages as well
                                        Script to run the appliaction
package-lock.json| Default | NoChange => Information of all packages
<6 angular.json
>=5 angular-cli.json| Default | Less Change Require => path for directory or app required path

.gitignore| Default | Less Change Require => path or file which we dont want to push
.editorconfig | Default | NoChange=>   make same standerd of wirting among team
node_modules=> all the Packages
e2e=> end to end 


/*===========*/
Modules | NgModule   => All the declaration will be done here
Components | Component=> Containes HTML,CSS and Logics
Pipe | Pipe,PipeTarnsform=> Run time transformation
Service | Injectable=> help to connect backend or any external file
Routing | NgModule=> Routing between pages


angular.json ==> main.ts => app.module => app.component


https://github.com/Aakashdeveloper/EDU_ANG_MAR_Weekend

//One Way Binding
-- Data Binding  {{}}
-- Property Binding []
-- Event Binding ()
//Two Way Binding [()]


////////////
String ="dtht" "544" "true" 'tiuy'
Number= 897 78 898 89  897.897
Boolean= true/ false
any[]

[78,678,67,8546]
["ds","g", "dfg", "gd"]
["dgd",436,4,6,6,"dfg",true,"hf",54,"fh"]

/////////
*ngFor
*ngIf


var a  = 10
var a
a=10

var = redeclare & reassign
let = cannot redeclare & but can reassign
const  = n redeclaration & nor reassign


var a = 10
undefined
a>10?'yes':'no'
"no"
a==10?'yes':'no'
"yes"

https://www.w3schools.com/jsref/jsref_filter.asp
https://www.w3schools.com/jsref/jsref_map.asp
https://www.w3schools.com/jsref/jsref_indexof.asp


//////
uppercase
lowercase
currency
percantage
date
titlecase

/////////////////////////
function add(a,b){
    return a+b
}

const add = (a,b) => { return a+b }


///
Pipe
cutsome Pipe
indexof
filter
twoway Binding
CSS
ngstyle
ngclass
search
model


https://ngapi4.herokuapp.com/api/getProducts
https://ngmovies.herokuapp.com/api/getMovies

/*
input act like attribute
output act event

var a = 10
var b = "my age is "+a
var c = `my age is ${a}`


function add(a,b){
    return a+b
}
function sub(a,b){
    return a+b
}
function multy(a,b){
    return a+b
}
add(1,2)
sub(1,2)
*/


>>dependency injection 
rather than creating itself when we from
external source


/*

git init
git add .
git commit -m "first commit"
git remote add origin https://github.com/Aakashdeveloper/gitlearn.git
git push -u origin master
*/

cli
ng new firstapp
ng g c music/ ng generate component music
ng g s musicservice
ng g m module
ng g p pipe

///
product app
>>ng build --prod
